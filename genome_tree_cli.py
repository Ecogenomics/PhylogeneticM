#!/usr/bin/env python
import argparse
import sys
import genome_tree_backend as backend
import getpass
import random


def ErrorReport(msg):
    sys.stderr.write(msg)
    sys.stderr.flush()

def CreateUser(GenomeDatabase, args):
    password = getpass.getpass("Enter password for new user (leave blank to auto-generate):")
    autogenerated = False
    if password == '':
        password = GenomeDatabase.GenerateRandomPassword()
        autogenerated = True
    if not autogenerated and (password != getpass.getpass("Confirm password:")) :
        ErrorReport("Passwords don't match.\n")
        return False
    GenomeDatabase.CreateUser(args.username, password, args.type)
    if autogenerated:
        print "Temporary password: " + password + "\n"
    print "User Created!\n"
    return True
        

    
if __name__ == '__main__':
    
    # create the top-level parser
    parser = argparse.ArgumentParser(prog='genome_tree_cli.py')
    parser.add_argument('-u', dest='login_username', help='Username to log into the database')
    
    subparsers = parser.add_subparsers(help='Sub-Command Help', dest='subparser_name')
    
# -- User management subparsers
    
    parser_createuser = subparsers.add_parser('CreateUser',
                                              help='Create user help')
    parser_createuser.add_argument('--user', dest = 'username',
                                   required=True, help='Username of the created user')
    parser_createuser.add_argument('--type', dest = 'type',
                                   required=True, help='User type')
    parser_createuser.set_defaults(func=CreateUser)
    
    parser_modifyuser = subparsers.add_parser('ModifyUser', help='Modify user help')
    parser_modifyuser.add_argument('--user', dest = 'username',
                                   required=True, help='Username of the user')
    parser_modifyuser.add_argument('--type', dest = 'type', help='User type')
    parser_modifyuser.add_argument('--password', dest = 'password',
                                   action='store_true', help='User type')
    parser_modifyuser.set_defaults(func=CreateUser)
    
    parser_showuser = subparsers.add_parser('ShowUser', help='Show user help')
    parser_showuser.add_argument('--user', dest = 'username',
                                required=True, help='Username of the user')

# -- Add Genome Subparsers


    # parse some argument lists
    args =  parser.parse_args()
    
    GenomeDatabase = backend.GenomeDatabase()
    GenomeDatabase.MakePostgresConnection()
    
    User = GenomeDatabase.UserLogin(args.login_username,
                                    getpass.getpass("Enter your password (%s):" %
                                                    (args.login_username,) ))
    
    print User
    
    if not User:
        ErrorReport("Database login failed. The following error was reported:\n" +
                    "\t" + GenomeDatabase.lastErrorMessage)
        sys.exit(-1)

    args.func(GenomeDatabase, args)


    

